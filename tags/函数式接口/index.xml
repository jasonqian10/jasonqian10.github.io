<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>函数式接口 on 知不道</title>
    <link>https://jasonqian10.github.io/tags/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3/</link>
    <description>Recent content in 函数式接口 on 知不道</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 30 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jasonqian10.github.io/tags/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【java8】(二)高大上的函数式接口怎么用</title>
      <link>https://jasonqian10.github.io/post/java/java8-function-interface/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasonqian10.github.io/post/java/java8-function-interface/</guid>
      <description>&lt;h2 id=&#34;函数式接口&#34;&gt;函数式接口&lt;/h2&gt;

&lt;p&gt;函数式接口(Functional Interface)是只有一个抽象方法的接口。这样一个函数接口其实就是一个函数，将函数式编程转换成对象操作。&lt;/p&gt;

&lt;p&gt;1)函数式接口中的抽象函数就是为了支持 lambda表达式；&lt;/p&gt;

&lt;p&gt;2)函数式接口可以被隐式转换为lambda表达式；&lt;/p&gt;

&lt;p&gt;3)为确保函数式接口符合语法，可以添加@FunctionalInterface注解；&lt;/p&gt;

&lt;p&gt;注意：加不加&lt;code&gt;@FunctionalInterface&lt;/code&gt;对于接口是不是函数式接口没有影响，该注解知识提醒编译器去检查该接口是否仅包含一个抽象方法。&lt;/p&gt;

&lt;p&gt;例外：&lt;/p&gt;

&lt;p&gt;函数式接口里是可以包含默认方法default method（函数式接口里是可以包含默认方法）；&lt;/p&gt;

&lt;p&gt;函数式接口里是可以包含静态方法（因为静态方法不能是抽象方法，是一个已经实现了的方法，无法被覆写）；&lt;/p&gt;

&lt;p&gt;函数式接口里是可以包含Object里的public方法，如equals()。&lt;/p&gt;

&lt;p&gt;下面介绍几种常用的函数式接口。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>