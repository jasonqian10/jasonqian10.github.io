<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>并发编程 on 知不道</title>
    <link>https://jasonqian10.github.io/tags/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in 并发编程 on 知不道</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 01 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://jasonqian10.github.io/tags/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【Java并发编程】(一)原理篇</title>
      <link>https://jasonqian10.github.io/post/java/java-concurrency-principle/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasonqian10.github.io/post/java/java-concurrency-principle/</guid>
      <description>Java并发理论 这部分内容涉及操作系统、CPU、内存、指令以及JMM（Java内存模型）相关的机制。 重排序 重排序通常是编译器或运行时环境为了</description>
    </item>
    
    <item>
      <title>【Java并发编程】(三)锁机制</title>
      <link>https://jasonqian10.github.io/post/java/java-lock-system/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasonqian10.github.io/post/java/java-lock-system/</guid>
      <description>常见锁 Synchronized 见上 Lock ####Condition 锁的分类 几种锁的原理 偏向锁 轻量级锁 重量级锁 除了偏向锁，其他锁都使用循环CAS的方式获取锁。</description>
    </item>
    
    <item>
      <title>【Java并发编程】(二)并发关键字</title>
      <link>https://jasonqian10.github.io/post/java/java-concurrency-keyword/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jasonqian10.github.io/post/java/java-concurrency-keyword/</guid>
      <description>Synchronized 是锁的一类。有三种锁的形式: 普通同步方法 ==》锁的是当前实例对象 静态同步块 ==》锁的是当前类的Class对象 同步方法块（代码块） ==》锁的</description>
    </item>
    
  </channel>
</rss>
